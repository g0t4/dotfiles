{

    // code lens like inlay hints are a hot mess of slow to update and so when editing python they remain as if real code and not and you cannot tell until they refresh and leave and that is if you dont have a mistake in your indentation or code in which case they wont update
    "pyright.inlayHints.variableTypes": false,
    "pyright.inlayHints.parameterTypes": false,
    "pyright.inlayHints.functionReturnTypes": false,

    // keep empty lines, at least 1... so I can partition sections (i.e. in this file), newlines also help movement with vim {}
    "json.format.keepLines": true,

    "markdownlint.config": {
        // rules: https://github.com/DavidAnson/markdownlint?tab=readme-ov-file#rules--aliases
        "MD007": {
            "indent": 4
            // https://github.com/DavidAnson/markdownlint/blob/main/doc/md007.md
            // default is 2 and doesn't respect .editorconfig NOR vim variables for tab size
        },
        "MD012": false,
        "line-length": false,
        // FYI tag groups combine rules: https://github.com/DavidAnson/markdownlint?tab=readme-ov-file#tags (seems to only enable/disable though, so suboptions of similar rules cannot be set like can't do indent on all indent related rules
        // FYI I really just want some basic format consistency in spacing (i.e. after - list items) and don't give a RATS A about rules, that said if they don't get in my way they are fine
    },
    // other people use sumneko-lua... I got coc-lua to work just fine... btw make sure :CocConfig opens this file, else maybe your symlink is messed up from dotfiles repo
    // best way to test this config, open split view with config on top and on bottom a lua file with an issue, modify config and save it and it will refresh the lua file coc diagnostics immediately, but not if edited in another instance of VIM or not using VIM btw
    // the following config (workspace.library, runtime.version/path) were added to make vim globals work in coc-lua (not marked as undefined and have completions)
    "Lua.workspace.library": [
        "/opt/homebrew/Cellar/neovim/0.10.2_1/share/nvim/runtime/lua",
        "/opt/homebrew/Cellar/neovim/0.10.2_1/share/nvim/runtime/lua/vim/lsp",
    ],
    "Lua.runtime.version": "LuaJIT",
    "Lua.runtime.path": [
        "?.lua",
        "?/init.lua",
        "/opt/homebrew/Cellar/neovim/0.10.2_1/share/nvim/runtime/lua/vim"
    ],
    // FYI another persons' config: https://raw.githubusercontent.com/oppara/dotfiles/611ea809e380d5b4e3e374568a85e52e744a429e/config/nvim/coc-settings.json
    "languageserver": {
        // https://github.com/ndonfris/fish-lsp#client-configuration-required
        // https://github.com/ndonfris/fish-lsp-language-clients/tree/coc_minimal
        "fish-lsp": {
            "command": "fish-lsp",
            "filetypes": [
                "fish"
            ],
            "args": [
                "start"
            ],
            "revealOutputChannelOn": "info",
            "initializationOptions": {
                "workspaces": {
                    "paths": {
                        "defaults": [
                            // IIUC these provide paths for symbols and other definitions from primary fish config files and brew installed share/fish files
                            "$HOME/.config/fish",
                            "/opt/homebrew/share/fish",
                        ]
                    }
                }
            }
        },
    },
}
